/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
    collections: {
        users: User;
        pages: Page;
        media: Media;
        listings: Listing;
        locations: Location;
        companies: Company;
        'payload-preferences': PayloadPreference;
        'payload-migrations': PayloadMigration;
    };
    globals: {
        navigation: Navigation;
        'site-options': SiteOption;
    };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
    id: number;
    role?: ('admin' | 'apartment-manager') | null;
    company_access?: (number | Company)[] | null;
    updatedAt: string;
    createdAt: string;
    email: string;
    resetPasswordToken?: string | null;
    resetPasswordExpiration?: string | null;
    salt?: string | null;
    hash?: string | null;
    loginAttempts?: number | null;
    lockUntil?: string | null;
    password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
    id: number;
    title: string;
    slug?: string | null;
    publishedAt?: string | null;
    featuredImage?: number | Media | null;
    listing_limit: number;
    updatedAt: string;
    createdAt: string;
    _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
    id: number;
    alt?: string | null;
    updatedAt: string;
    createdAt: string;
    url?: string | null;
    filename?: string | null;
    mimeType?: string | null;
    filesize?: number | null;
    width?: number | null;
    height?: number | null;
    focalX?: number | null;
    focalY?: number | null;
    sizes?: {
        thumbnail?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
        card?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
        tablet?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
    };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
    id: number;
    title: string;
    slug?: string | null;
    publishedAt?: string | null;
    featuredImage?: number | Media | null;
    content?:
        | (
        | {
        content: {
            [k: string]: unknown;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'ContentBlock';
    }
        | {
        header: string;
        showSearch?: boolean | null;
        image?: number | Media | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'HeaderBlock';
    }
        | {
        title: string;
        content?:
            | {
            [k: string]: unknown;
        }[]
            | null;
        button?: {
            ButtonText?: string | null;
            ExternalLink?: boolean | null;
            Page?:
                | ({
                relationTo: 'pages';
                value: number | Page;
            } | null)
                | ({
                relationTo: 'listings';
                value: number | Listing;
            } | null);
            Url?: string | null;
        };
        images?:
            | {
            image?: number | Media | null;
            id?: string | null;
        }[]
            | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'MediaBlock';
    }
        | {
        collections: (
            | {
            relationTo: 'pages';
            value: number | Page;
        }
            | {
            relationTo: 'listings';
            value: number | Listing;
        }
            | {
            relationTo: 'locations';
            value: number | Location;
        }
            )[];
        type: 'featured_images' | 'buttons';
        id?: string | null;
        blockName?: string | null;
        blockType: 'CollectionGroupBlock';
    }
        )[]
        | null;
    updatedAt: string;
    createdAt: string;
    _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listings".
 */
export interface Listing {
    id: number;
    title: string;
    slug?: string | null;
    publishedAt?: string | null;
    featuredImage?: number | Media | null;
    company: number | Company;
    locations?: (number | Location)[] | null;
    gallery?:
        | {
        gallery_item?: number | Media | null;
        id?: string | null;
    }[]
        | null;
    property_description?:
        | {
        [k: string]: unknown;
    }[]
        | null;
    features?: {
        unit_amenities?: {
            items?:
                | (
                | 'Air/Heat (central)'
                | 'Appliances (Brand New)'
                | 'Breakfast Bar'
                | 'Cable Ready'
                | 'Carpeting'
                | 'Ceiling Fan(s)'
                | 'Dead Bolt Locks'
                | 'Dining Area'
                | 'Dishwasher'
                | 'Disposal'
                | 'DSL Ready'
                | 'Extra Storage'
                | 'Fully Equipped Kitchen'
                | 'Internet Access'
                | 'Large Closet Space'
                | 'Primary Bedrooms'
                | 'Microwave'
                | 'Non-Smoking Units'
                | 'Pantry Space'
                | 'Patio or Balcony'
                | 'Security Monitor'
                | 'Spacious Bedrooms'
                | 'Tile Floors'
                | 'Vaulted Ceilings'
                | 'Walk-In Closets'
                | 'Washer Dryer In Unit'
                | 'Window Blinds'
                | 'Walk In Shower'
                )[]
                | null;
        };
        community_amenities?: {
            items?:
                | (
                | 'Accepts Electronic Payments'
                | 'Basketball Court'
                | 'Business Center/Media Room'
                | 'Close to Public Transportation'
                | 'Club House/Community Room'
                | 'Community Patio'
                | 'Controlled Access'
                | 'Corporate/Guest Suite'
                | 'Dog Park'
                | 'Elevator'
                | 'Fitness Center'
                | 'Maintenance (24hr Emergency)'
                | 'Non-Smoking Buildings'
                | 'Handicap Units'
                | 'Laundry Facilities'
                | 'Lawn Care'
                | 'Maintenance (on-site)'
                | 'Management (on-site)'
                | 'Near Bike Trails'
                | 'Near Shopping, Dining, and Entertainment'
                | 'Non-Smoking Community'
                | 'Playground'
                | 'Pool'
                | 'Professionally Landscaped'
                | 'Snow Removal'
                | 'Storage Space Available'
                | 'Courtyard'
                )[]
                | null;
        };
        utilities_included?: {
            items?: ('Electric' | 'Internet' | 'Garbage' | 'Heat' | 'Sewer' | 'Water')[] | null;
        };
        parking_options?: {
            items?: ('Garage Available' | 'Off Street Parking')[] | null;
        };
        pets?: {
            items?: ('Cats Allowed' | 'Dogs Allowed')[] | null;
        };
        lease_options?: {
            items?: ('12 Month' | '6 Month')[] | null;
        };
        floorplans?:
            | {
            beds?: number | null;
            bath?: number | null;
            starting_at?: number | null;
            sq_ft?: number | null;
            id?: string | null;
        }[]
            | null;
        additional_information?: {
            description?: string | null;
            application_fee?: string | null;
            security_deposit?: string | null;
            pet_deposit?: string | null;
            pet_rent?: number | null;
        };
    };
    street?: string | null;
    city?: string | null;
    state?: string | null;
    zip?: string | null;
    latitude?: string | null;
    longitude?: string | null;
    updatedAt: string;
    createdAt: string;
    _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
    id: number;
    title: string;
    slug?: string | null;
    publishedAt?: string | null;
    featuredImage?: number | Media | null;
    content?:
        | (
        | {
        content: {
            [k: string]: unknown;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'ContentBlock';
    }
        | {
        header: string;
        showSearch?: boolean | null;
        image?: number | Media | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'HeaderBlock';
    }
        | {
        title: string;
        content?:
            | {
            [k: string]: unknown;
        }[]
            | null;
        button?: {
            ButtonText?: string | null;
            ExternalLink?: boolean | null;
            Page?:
                | ({
                relationTo: 'pages';
                value: number | Page;
            } | null)
                | ({
                relationTo: 'listings';
                value: number | Listing;
            } | null);
            Url?: string | null;
        };
        images?:
            | {
            image?: number | Media | null;
            id?: string | null;
        }[]
            | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'MediaBlock';
    }
        | {
        collections: (
            | {
            relationTo: 'pages';
            value: number | Page;
        }
            | {
            relationTo: 'listings';
            value: number | Listing;
        }
            | {
            relationTo: 'locations';
            value: number | Location;
        }
            )[];
        type: 'featured_images' | 'buttons';
        id?: string | null;
        blockName?: string | null;
        blockType: 'CollectionGroupBlock';
    }
        )[]
        | null;
    updatedAt: string;
    createdAt: string;
    _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
    id: number;
    user: {
        relationTo: 'users';
        value: number | User;
    };
    key?: string | null;
    value?:
        | {
        [k: string]: unknown;
    }
        | unknown[]
        | string
        | number
        | boolean
        | null;
    updatedAt: string;
    createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
    id: number;
    name?: string | null;
    batch?: number | null;
    updatedAt: string;
    createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
    id: number;
    items: {
        page: {
            relationTo: 'pages';
            value: number | Page;
        };
        id?: string | null;
    }[];
    updatedAt?: string | null;
    createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-options".
 */
export interface SiteOption {
    id: number;
    siteTitle: string;
    siteDescription: string;
    siteLogo: number | Media;
    siteLogoAlt?: number | Media | null;
    updatedAt?: string | null;
    createdAt?: string | null;
}
